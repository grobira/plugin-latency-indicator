"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWSSocket = exports.getWDSSocketPort = exports.setWDSSocketPort = exports.getWDSSocketPath = exports.setWDSSocketPath = exports.getWDSSocketHost = exports.setWDSSocketHost = exports.isHTTPS = exports.isLifecycle = exports.getLifecycle = exports.setBabelEnv = exports.getBabelEnv = exports.setNodeEnv = exports.getNodeEnv = exports.setPort = exports.getPort = exports.hasPort = exports.setHost = exports.getHost = exports.hasHost = exports.getRealm = exports.getAuthToken = exports.getAccountSid = exports.isDebug = exports.isTrace = exports.isCI = exports.setQuiet = exports.allowUnbundledReact = exports.isTerminalPersisted = exports.skipPreflightCheck = exports.persistTerminal = exports.isWin32 = exports.Lifecycle = exports.Environment = void 0;
/* eslint-disable import/no-unused-modules */
var Environment;
(function (Environment) {
    Environment["Production"] = "production";
    Environment["Development"] = "development";
    Environment["Test"] = "test";
})(Environment = exports.Environment || (exports.Environment = {}));
var Lifecycle;
(function (Lifecycle) {
    Lifecycle["Test"] = "test";
    Lifecycle["Build"] = "build";
    Lifecycle["Prebuild"] = "prebuild";
    Lifecycle["Deploy"] = "deploy";
    Lifecycle["Predeploy"] = "predeploy";
})(Lifecycle = exports.Lifecycle || (exports.Lifecycle = {}));
/**
 * Helper method to test whether env variable is defined
 * @param key the env to lookup
 * @return whether the key is set
 */
var isDefined = function (key) { return typeof key === 'string' && key !== ''; };
/* istanbul ignore next */
exports.isWin32 = function () { return process.platform === 'win32'; };
exports.persistTerminal = function () { return (process.env.PERSIST_TERMINAL = 'true'); };
exports.skipPreflightCheck = function () { return process.env.SKIP_PREFLIGHT_CHECK === 'true'; };
exports.isTerminalPersisted = function () { return process.env.PERSIST_TERMINAL === 'true'; };
exports.allowUnbundledReact = function () { return process.env.UNBUNDLED_REACT === 'true'; };
exports.setQuiet = function () { return (process.env.QUIET = 'true'); };
exports.isCI = function () { return process.env.CI === 'true'; };
exports.isTrace = function () { return process.env.TRACE === 'true'; };
exports.isDebug = function () { return process.env.DEBUG === 'true' || exports.isTrace(); };
exports.getAccountSid = function () { return process.env.TWILIO_ACCOUNT_SID; };
exports.getAuthToken = function () { return process.env.TWILIO_AUTH_TOKEN; };
exports.getRealm = function () { return process.env.REALM; };
exports.hasHost = function () { return isDefined(process.env.HOST); };
exports.getHost = function () { return process.env.HOST; };
exports.setHost = function (host) { return (process.env.HOST = host); };
exports.hasPort = function () { return isDefined(process.env.PORT); };
exports.getPort = function () { return Number(process.env.PORT); };
exports.setPort = function (port) { return (process.env.PORT = String(port)); };
exports.getNodeEnv = function () { return process.env.NODE_ENV; };
exports.setNodeEnv = function (_env) { return (process.env.NODE_ENV = _env); };
exports.getBabelEnv = function () { return process.env.BABEL_ENV; };
exports.setBabelEnv = function (_env) { return (process.env.BABEL_ENV = _env); };
exports.getLifecycle = function () { return process.env.npm_lifecycle_event; };
exports.isLifecycle = function (cycle) { return process.env.npm_lifecycle_event === cycle; };
exports.isHTTPS = function () { return process.env.HTTPS === 'true'; };
exports.setWDSSocketHost = function (host) { return (process.env.WDS_SOCKET_HOST = host); };
exports.getWDSSocketHost = function () { return process.env.WDS_SOCKET_HOST; };
exports.setWDSSocketPath = function (path) { return (process.env.WDS_SOCKET_PATH = path); };
exports.getWDSSocketPath = function () { return process.env.WDS_SOCKET_PATH; };
exports.setWDSSocketPort = function (port) { return (process.env.WDS_SOCKET_PORT = port.toString()); };
exports.getWDSSocketPort = function () { return Number(process.env.WDS_SOCKET_PORT); };
exports.getWSSocket = function () { return ({
    host: process.env.WDS_SOCKET_HOST,
    path: process.env.WDS_SOCKET_PATH,
    port: process.env.WDS_SOCKET_PORT,
}); };
exports.default = {
    isWin32: exports.isWin32,
    persistTerminal: exports.persistTerminal,
    skipPreflightCheck: exports.skipPreflightCheck,
    allowUnbundledReact: exports.allowUnbundledReact,
    isTerminalPersisted: exports.isTerminalPersisted,
    setQuiet: exports.setQuiet,
    isCI: exports.isCI,
    isDebug: exports.isDebug,
    isTrace: exports.isTrace,
    getAccountSid: exports.getAccountSid,
    getAuthToken: exports.getAuthToken,
    getRealm: exports.getRealm,
    hasHost: exports.hasHost,
    getHost: exports.getHost,
    setHost: exports.setHost,
    hasPort: exports.hasPort,
    getPort: exports.getPort,
    setPort: exports.setPort,
    getNodeEnv: exports.getNodeEnv,
    setNodeEnv: exports.setNodeEnv,
    getBabelEnv: exports.getBabelEnv,
    setBabelEnv: exports.setBabelEnv,
    getLifecycle: exports.getLifecycle,
    isLifecycle: exports.isLifecycle,
    isHTTPS: exports.isHTTPS,
    getWDSSocketHost: exports.getWDSSocketHost,
    setWDSSocketHost: exports.setWDSSocketHost,
    getWDSSocketPath: exports.getWDSSocketPath,
    setWDSSocketPath: exports.setWDSSocketPath,
    setWDSSocketPort: exports.setWDSSocketPort,
    getWDSSocketPort: exports.getWDSSocketPort,
    getWSSocket: exports.getWSSocket,
};
//# sourceMappingURL=env.js.map