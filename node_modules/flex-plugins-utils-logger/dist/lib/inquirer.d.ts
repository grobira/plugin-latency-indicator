import inquirer from 'inquirer';
export declare type YNAnswer = 'Y' | 'N';
export declare const positiveAnswers: string[];
export declare const negativeAnswers: string[];
export declare const acceptableAnswers: string[];
export interface Question {
    name: string;
    message: string;
    type?: 'list' | 'input' | 'password';
    validate?(input: string): boolean | string | Promise<boolean | string>;
}
export declare const _validateConfirmation: (defaultAnswer?: "Y" | "N" | undefined) => (input: string) => true | "Please answer with either \"y\" or \"n\"";
export declare const prompt: (question: Question) => Promise<Question['name']>;
export declare const confirm: (question: string, defaultAnswer?: "Y" | "N" | undefined) => Promise<boolean>;
export declare const choose: (question: Question, choices: string[]) => Promise<Question['name']>;
export default inquirer;
