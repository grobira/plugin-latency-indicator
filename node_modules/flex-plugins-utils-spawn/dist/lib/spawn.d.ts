/// <reference types="node" />
export interface SpawnReturn {
    exitCode: number;
    stdout: string;
    stderr: string;
}
interface SPromise<T> extends Promise<T> {
    cancel: () => void;
    kill: (signal?: NodeJS.Signals | number) => boolean;
}
export declare type SpawnPromise = SPromise<SpawnReturn>;
export declare const spawn: (cmd: string, args: string[], options?: object) => SpawnPromise;
export declare const node: (args: string[], options?: object) => SpawnPromise;
export declare const npm: (args: string[], options?: object) => SpawnPromise;
export declare const yarn: (args: string[], options?: object) => SpawnPromise;
export default spawn;
